{"version":3,"sources":["logo.svg","Count.jsx","App.js","reportWebVitals.js","index.js"],"names":["Count","context","useContext","Context","useState","name","setName","count","setCount","useEffect","fetch","then","res","json","result","console","log","error","errData","document","title","className","onClick","createContext","data","App","src","logo","alt","href","target","rel","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yLAAe,G,KAAA,IAA0B,kC,sBC8C1BA,MA1Cf,WAEI,IAAMC,EAAUC,qBAAWC,GAFd,EAGWC,mBAASH,EAAQI,MAH5B,mBAGNA,EAHM,KAGAC,EAHA,OAIaF,mBAASH,EAAQM,OAJ9B,mBAINA,EAJM,KAICC,EAJD,KA+Bb,OAzBAC,qBAAU,WACNC,MAAM,oEACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACGC,QAAQC,IAAIF,GACZR,EAAQQ,EAAOT,MACfG,EAASM,EAAOP,UAEpB,SAACU,GACGF,QAAQC,IAAIC,GACZ,IAAMC,EAEK,EAEXZ,EAHU,sBAIVE,EAASU,QAGtB,IAEHT,qBAAU,WACNU,SAASC,MAAT,0CAAqCf,EAArC,kBAA8CE,EAA9C,cAIA,sBAAKc,UAAU,gBAAf,UACI,+DACA,8BAAIhB,EAAJ,UAAYE,EAAZ,aACA,wBAAQe,QAAS,kBAAMd,EAASD,EAAQ,IAAxC,oCCjCCJ,EAAUoB,0BAEnBC,EAAO,GACXT,QAAQC,IAAIQ,GAmDGC,MA7Bf,WAME,OALAD,EAAO,CACLnB,KAAM,eACNE,MAAO,MAETQ,QAAQC,IAAIQ,GAEV,qBAAKH,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKK,IAAKC,EAAMN,UAAU,WAAWO,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEP,UAAU,WACVQ,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,cAAC5B,EAAQ6B,SAAT,CAAkBC,MAAOT,EAAzB,SACE,cAAC,EAAD,YCzCKU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BX,K","file":"static/js/main.dd56c5ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useContext } from 'react';\nimport { Context } from './App.js';\n\n\nfunction Count() {\n  \n    const context = useContext(Context);\n    const [name, setName] = useState(context.name);\n    const [count, setCount] = useState(context.count);\n\n    useEffect(() => {\n        fetch('https://my-json-server.typicode.com/ryo-i/react-hook-test/data/1')\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    setName(result.name);\n                    setCount(result.count);\n                },\n                (error) => {\n                    console.log(error);\n                    const errData = {\n                        name: '名無し',\n                        count: 0\n                    }\n                    setName(errData.name);\n                    setCount(errData.count);\n                }\n            );\n    }, []);\n\n    useEffect(() => {\n        document.title = `React Hooks事始め - ${name}が ${count} 匹`;\n    });\n\n    return (\n        <div className=\"reactHookTest\">\n            <h2>React Hooks事始め</h2>\n            <p>{name}が {count} 匹</p>\n            <button onClick={() => setCount(count + 1)}>\n            数える\n            </button>\n        </div>\n    );\n}\n\nexport default Count;","import React, { createContext } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Count from './Count';\n// import dataJson from './data.json';\n\nexport const Context = createContext();\n\nlet data = {};\nconsole.log(data);\n\n/* const getData = () => {\n  fetch('http://localhost:3001/data/1/')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          data = result;\n          console.log(data);\n        },\n        (error) => {\n          console.log(error);\n          const errData = {\n            name: '名無し',\n            count: 0\n          }\n          data = errData;\n        }\n      )\n};\ngetData(); */\n\nfunction App() {\n  data = {\n    name: '山羊',\n    count: null\n  };\n  console.log(data);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <Context.Provider value={data} >\n          <Count />\n        </Context.Provider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}